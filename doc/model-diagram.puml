@startuml model

skinparam {

    DefaultFontColor White
    DefaultFontName Monospace
    DefaultFontSize 16
    DefaultBorderColor White
    ArrowColor Gray

    BackgroundColor Black
    BorderColor Gray
    FontColor White

    class {
        BackgroundColor Black
        BorderColor Gray
    }

    package {
        BackgroundColor Black
        BorderColor Gray
    }

}

!define List(T) List[T]
!define string str
!define Optional(T) Optional[T]
!define Dict(T, U) Dict[T, U]

package minesweeper {

    class Board {
        -board: List(List(CellContainer))
    }

    protocol Cell {
        +is_mine() -> bool
        +is_flagged() -> bool
        +is_revealed() -> bool
        +unwrap() -> Cell
        +flagged() -> FlaggedCell
        +revealed() -> RevealedCell
        +__str__() -> string
    }

    class EmptyCell {
        +is_mine() -> bool: False
        +is_flagged() -> bool: False
        +is_revealed() -> bool: False
        +unwrap() -> Cell: self
        +flagged() -> FlaggedCell
        +revealed() -> RevealedCell
        +__str__() -> string
    }

    class MineCell {
        +is_mine() -> bool: True
        +is_flagged() -> bool: False
        +is_revealed() -> bool: False
        +unwrap() -> Cell: self
        +flagged() -> FlaggedCell
        +revealed() -> RevealedCell
        +__str__() -> string
    }

    class FlaggedCell {
        -cell: Cell
        +is_mine() -> bool
        +is_flagged() -> bool: True
        +is_revealed() -> bool: False
        +unwrap() -> Cell
        +flagged() -> FlaggedCell
        +revealed() -> RevealedCell
        +__str__() -> string
    }

    class RevealedCell {
        -cell: Cell
        +is_mine() -> bool
        +is_flagged() -> bool: False
        +is_revealed() -> bool: True
        +unwrap() -> Cell
        +flagged() -> FlaggedCell
        +revealed() -> RevealedCell
        +__str__() -> string
    }

    class CellContainer {
        -cell: Cell
        +is_mine() -> bool
        +is_flagged() -> bool
        +is_revealed() -> bool
        +unwraped() -> Cell
        +flag() -> None
        +reveal() -> None
    }

    Board o-- CellContainer
    CellContainer -> Cell
    Cell <|-- EmptyCell
    Cell <|-- MineCell
    Cell <|-- FlaggedCell
    Cell <|-- RevealedCell
}

@enduml